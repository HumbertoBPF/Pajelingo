# Generated by Django 4.2.1 on 2023-05-21 14:16

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import languageschool.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('picture', models.ImageField(blank=True, upload_to=languageschool.models.get_upload_to)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('article_name', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.CharField(max_length=30, unique=True)),
            ],
            options={
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('game_name', models.CharField(max_length=30, unique=True)),
                ('android_game_activity', models.CharField(max_length=100)),
                ('image', models.ImageField(blank=True, upload_to=languageschool.models.get_upload_to)),
                ('link', models.CharField(max_length=100)),
                ('instructions', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_name', models.CharField(max_length=30, unique=True)),
                ('personal_pronoun_1', models.CharField(blank=True, max_length=30, null=True)),
                ('personal_pronoun_2', models.CharField(blank=True, max_length=30, null=True)),
                ('personal_pronoun_3', models.CharField(blank=True, max_length=30, null=True)),
                ('personal_pronoun_4', models.CharField(blank=True, max_length=30, null=True)),
                ('personal_pronoun_5', models.CharField(blank=True, max_length=30, null=True)),
                ('personal_pronoun_6', models.CharField(blank=True, max_length=30, null=True)),
                ('flag_image', models.ImageField(blank=True, upload_to=languageschool.models.get_upload_to)),
            ],
        ),
        migrations.CreateModel(
            name='Word',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('word_name', models.CharField(max_length=30)),
                ('image', models.ImageField(blank=True, upload_to=languageschool.models.get_upload_to)),
                ('article', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='languageschool.article')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='languageschool.category')),
                ('language', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='languageschool.language')),
                ('synonyms', models.ManyToManyField(blank=True, to='languageschool.word')),
            ],
        ),
        migrations.CreateModel(
            name='Score',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.PositiveBigIntegerField()),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='languageschool.game')),
                ('language', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='languageschool.language')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Meaning',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meaning', models.TextField()),
                ('word', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='languageschool.word')),
            ],
        ),
        migrations.CreateModel(
            name='GameRound',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('round_data', models.JSONField()),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='languageschool.game')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Conjugation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('conjugation_1', models.CharField(max_length=30)),
                ('conjugation_2', models.CharField(max_length=30)),
                ('conjugation_3', models.CharField(max_length=30)),
                ('conjugation_4', models.CharField(max_length=30)),
                ('conjugation_5', models.CharField(max_length=30)),
                ('conjugation_6', models.CharField(max_length=30)),
                ('tense', models.CharField(max_length=30)),
                ('word', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='languageschool.word')),
            ],
        ),
        migrations.AddField(
            model_name='article',
            name='language',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='languageschool.language'),
        ),
        migrations.AddField(
            model_name='user',
            name='favorite_words',
            field=models.ManyToManyField(to='languageschool.word'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
        migrations.AddConstraint(
            model_name='word',
            constraint=models.UniqueConstraint(fields=('word_name', 'language', 'article'), name='word_unique_constraint'),
        ),
        migrations.AddConstraint(
            model_name='score',
            constraint=models.UniqueConstraint(fields=('user', 'language', 'game'), name='score_unique_constraint'),
        ),
        migrations.AddConstraint(
            model_name='gameround',
            constraint=models.UniqueConstraint(fields=('user', 'game'), name='game_round_unique_constraint'),
        ),
        migrations.AddConstraint(
            model_name='conjugation',
            constraint=models.UniqueConstraint(fields=('word', 'tense'), name='conjugation_unique_constraint'),
        ),
        migrations.AddConstraint(
            model_name='article',
            constraint=models.UniqueConstraint(fields=('article_name', 'language'), name='article_unique_constraint'),
        ),
    ]
